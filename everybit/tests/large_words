# Instructions for writing a test:
#
# t: initializes new test
# n: initializes bit array
# r: rotates bit array subset at offset, length by amount
# e: expects raw bit array value


# 0: 32 bits, 14 rotated - 5
t 0

n 11111110111011011011101011011110
r 9 14 -5
e 11111110101101110111011011011110

# 1: 32 bit, 32 rotated by  16
t 1
n 10101100100001111001000010101011
r 0 32 16
e 10010000101010111010110010000111

# 2: Revert original n from 32
t 2
r 0 32 16
e 10101100100001111001000010101011

# 3: 64 bit word, inner part rotated by -17
t 3
n 1010110010000111100100001010101111111110111011011100000000000000
r 12 16 -17
e 1010110010001111001000010100101111111110111011011100000000000000

# 4: Expected from test 3, rotated in same spot by 17
t 4
r 12 16 17
e 1010110010000111100100001010101111111110111011011100000000000000

# 5: 32 bit word, rotated -7
t 5
n 11011110101011011011111011101111
r 0 32 -7
e 01010110110111110111011111101111

# 6: 64 bit word, rotated 3
t 6
n 1111111011101110101010111000011111111110111011011100000000000000
r 0 64 3
e 0001111111011101110101010111000011111111110111011011100000000000
