# Instructions for writing a test:
#
# t: initializes new test
# n: initializes bit array
# r: rotates bit array subset at offset, length by amount
# e: expects raw bit array value

# 0 A test where there are 9 bits and a simple 1 shift
t 0

n 100000000
r 0 9 1
e 010000000

n 100000000
r 1 1 1
e 100000000

n 100000000
r 0 2 1
e 010000000

# 1 A test of 7 bits and 1 shift
t 1
n 1000000
r 0 7 1
e 0100000

n 1000000
r 0 2 1
e 0100000

# 2 5 bits with a middle shift
t 2

n 01100
r 1 3 1
e 00110

n 01100
r 1 3 2
e 01010

n 01100
r 1 4 2
e 00011

# 3 2 bits 
t 3
n 10
r 0 2 1 
e 01

n 01
r 0 2 -1
e 10

# 4 1 bit?!
n 1
r 0 1 1
e 1

n 0
r 0 1 1
e 0

# 5 1 bit with weird offsets
t 5
n 1
r 0 1 3
e 1

n 0
r 0 1 -12345678910111213141517
e 0
