# Tests bit_length sizes

# missing
#  

# 0: bit_length = 0
t 0

n 1
r 0 0 1
e 1

# 1: bit_length = 1
t 1

n 1
r 0 1 1
e 1

# 2: 0 < bit_length < 8 (small even)
t 2

n 010101
r 1 2 1
e 001101

# 3: 0 < bit_length < 8 (small odd)
t 3

n 010101
r 1 3 2
e 001101

# 4: bit_length = 8
t 4

n 011010010110
r 1 8 3
e 001011010110

# 5: bit_length = bit_sz
t 5

n 010101010101
r 0 12 1
e 101010101010

# 6: bit_length + bit_offset = bit_sz
t 6

n 0011001101
r 1 9 2
e 0010110011

# 7: bit_length divisble by 8
t 7

n 1100110000110011101
r 1 16 1
e 1110011000011001101
