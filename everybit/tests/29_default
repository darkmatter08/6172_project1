# Copyright (c) 2012 MIT License by 6.172 Staff
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.


# Instructions for writing a test:
#
# t: initializes new test
# n: initializes bit array
# r: rotates bit array subset at offset, length by amount
# e: expects raw bit array value

# 0: headerexample (Verify the examples given in bitarray.h)
t 0

n 10010110
r 0 8 -1
e 00101101

# 1: second headerexample (Verify the examples given in bitarray.h)
t 1

n 10010110
r 2 5 2
e 10110100


# 2: 8bit
t 2

n 10000101
r 0 8 0
e 10000101

r 0 8 1
e 11000010

r 0 8 -1
e 10000101

r 0 8 -1
e 00001011

r 0 8 -11
e 01011000

# 3: Longer than 8bit 
t 3

n 1001011000
r 2 7 1
e 1000101100

r 0 5 1
e 1100001100

r 0 0 3
e 1100001100

r 0 1 1
e 1100001100

r 0 3 64
e 0110001100

r 2 7 -3
e 0101101000

r 2 4 -4
e 0101101000

r 2 7 0
e 0101101000

r 2 7 7
e 0101101000

r 0 10 2
e 0001011010

r 0 4 21
e 1000011010

# 4: Shorter than 8bit
t 4

n 10010
r 1 3 1
e 11000

r 4 1 1
e 11000

r 0 3 2
e 10100

r 0 0 3
e 10100

r 0 5 2
e 00101

r 0 3 64
e 10001

r 0 3 -2
e 01001

r 0 3 -3
e 01001

r 1 4 0 
e 01001

r 1 4 13
e 01100

# 5: Longer than 8 bit and divisible by 8
t 5

n 1001010011001010
r 6 5 2
e 1001011000101010

r 0 5 2
e 1010011000101010

r 15 1 3
e 1010011000101010

r 12 0 3
e 1010011000101010

r 0 16 4
e 1010101001100010

r 0 3 64
e 1100101001100010

r 0 5 6
e 1110001001100010

r 6 5 -3
e 1110001110000010

r 0 16 -16
e 1110001110000010

r 0 2 0
e 1110001110000010

r 4 8 1
e 1110000111000010

r 0 16 8
e 1100001011100001

# 6: All ones
t 6

n 11111111
r 3 4 -5
e 11111111

# 7: All zeros
t 7

n 00000000

r 4 2 -3
e 00000000

# 8: Half ones and half zeros
t 8

n 11110000

r 7 1 4
e 11110000 

r 3 3 5
e 11100100

r 0 8 1
e 01110010

r 2 0 5
e 01110010

r 0 3 -64
e 11010010 

r 2 3 13
e 11001010 

r 0 3 -5
e 01101010

r 1 5 -8
e 01011010

r 5 2 0
e 01011010

# 9: Alternating ones and zeros
t 9

n 10111010
r 7 1 4
e 10111010

r 3 3 5
e 10110110

r 0 8 1
e 01011011

r 2 0 5
e 01011011

r 0 3 64
e 00111011 

r 2 4 13
e 00011111

r 0 4 -5
e 00101111  

r 1 5 -8
e 01101011 

r 5 2 0
e 01101011

# 10: Rotations that cover a whole byte
t 10

n 100010001000100010001000
r 2 16 1
e 100001000100010001001000

r 0 16 8
e 010001001000010001001000

r 2 16 -2
e 010100100001000100001000

#11: Long rotations that cover 2 or more bytes
t 11

n 100010001000100010001000100010001000100010001000
r 2 37 1
e 100001000100010001000100010001000100010010001000

n 1000100011001111100000111001010101010010101010101010
r 2 37 1
e 1010010001100111110000011100101010101000101010101010

r 0 41 5
e 1000110100100011001111100000111001010101001010101010

r 0 49 0
e 1000110100100011001111100000111001010101001010101010

r 7 42 15
e 1000110010101001010101100100011001111100000111001010

r 7 42 -15
e 1000110100100011001111100000111001010101001010101010

r 6 42 8
e 1000110010101001001000110011111000001110010101011010
