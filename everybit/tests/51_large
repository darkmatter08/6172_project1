# 23 bits length + shift < total bist
t 0

n 11011010100010111001011
r 2 17 5
e 11111000110101000101011

# 23 bits full bit length shift
t 1

n 11011010100010111001011
r 0 23 -20
e 01111011010100010111001

# 23 bits length + shift < total bist
t 2

n 11011010100010111001011
r 2 17 11
e 11100010111000110101011

# 64 bit - large number multiple of 8 - offset of 0
t 3

n 1110000000001101101101111110101101000111001111000110100001011110
r 0 64 64
e 1110000000001101101101111110101101000111001111000110100001011110

#rotate by multiple of 8
r 0 64 8
e 0101111011100000000011011011011111101011010001110011110001101000

r 0 64 -8
e 1110000000001101101101111110101101000111001111000110100001011110

#rotate by nonmultiple of 8
r 0 64 9
e 0010111101110000000001101101101111110101101000111001111000110100

r 0 64 -9
e 1110000000001101101101111110101101000111001111000110100001011110

#rotate by more than one circle
r 0 64 73
e 0010111101110000000001101101101111110101101000111001111000110100

r 0 64 -73
e 1110000000001101101101111110101101000111001111000110100001011110

# 64 bit - large number multiple of 8 - offset of 1, modifying a subarray
# not the whole array
t 4

n 011100000000011011011011111101011010001110011110001101000010111101
r 1 64 64
e 011100000000011011011011111101011010001110011110001101000010111101

#rotate by multiple of 8
r 1 64 8
e 001011110111000000000110110110111111010110100011100111100011010001

r 1 64 -8
e 011100000000011011011011111101011010001110011110001101000010111101

#rotate by nonmultiple of 8
r 1 64 9
e 000101111011100000000011011011011111101011010001110011110001101001

r 1 64 -9
e 011100000000011011011011111101011010001110011110001101000010111101

#rotate by more than one circle
r 1 64 73
e 000101111011100000000011011011011111101011010001110011110001101001

r 1 64 -73
e 011100000000011011011011111101011010001110011110001101000010111101

# 65 bit - large number not multiple of 8 - offset of 0
t 5

n 11100000000011011011011111101011010001110011110001101000010111101
r 0 65 65
e 11100000000011011011011111101011010001110011110001101000010111101

#rotate by multiple of 8
r 0 65 8
e 10111101111000000000110110110111111010110100011100111100011010000

r 0 65 -8
e 11100000000011011011011111101011010001110011110001101000010111101

#rotate by nonmultiple of 8
r 0 65 9
e 01011110111100000000011011011011111101011010001110011110001101000

r 0 65 -9
e 11100000000011011011011111101011010001110011110001101000010111101

#rotate by more than one circle
r 0 65 74
e 01011110111100000000011011011011111101011010001110011110001101000

r 0 65 -74
e 11100000000011011011011111101011010001110011110001101000010111101

# 65 bit - large number not multiple of 8 - offset of 1,  modifying a subarray
# not the whole array
t 6

n 0111000000000110110110111111010110100011100111100011010000101111011
r 1 65 65
e 0111000000000110110110111111010110100011100111100011010000101111011

#rotate by multiple of 8
r 1 65 8
e 0101111011110000000001101101101111110101101000111001111000110100001

r 1 65 -8
e 0111000000000110110110111111010110100011100111100011010000101111011

#rotate by nonmultiple of 8
r 1 65 9
e 0010111101111000000000110110110111111010110100011100111100011010001

r 1 65 -9
e 0111000000000110110110111111010110100011100111100011010000101111011

#rotate by more than one circle
r 1 65 74
e 0010111101111000000000110110110111111010110100011100111100011010001

r 1 65 -74
e 0111000000000110110110111111010110100011100111100011010000101111011

