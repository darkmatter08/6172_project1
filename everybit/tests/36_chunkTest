# t: initializes new test
# n: initializes bit array
# r: rotates bit array subset at offset, length by amount
# e: expects raw bit array value

# 0: subarray starts at a word and has length divisible by 8
t 0

n 11110111001100010000000100100011
r 8 16 -8
e 11110111000000010011000100100011

t 1

n 11110111001100010000000100100011
r 8 20 -8
e 11110111000000010010001100010011

t 2

n 11110111001100010000000100100011
r 5 19 -8
e 11110001000000011110011000100011


t 3

n 11110111001100010000000100100011
r 6 24 -8
e 11110101000000010010001100110011

t 4

n 11110111001100010000000100100011
r 3 27 -8
e 11110001000000010010001011100111

t 5

n 11110111001100010000000100100011
r 6 21 -8
e 11110101000000010011100110000011

t 6
n 1111011100110001000000010010001111110111001100010000000100100011
r 0 64 -24
e 0010001111110111001100010000000100100011111101110011000100000001

t 7

n 0010010000111011010100100110001011011100000100000000111010010001
r 3 51 -10
e 0010110101001001100010110111000001000000001100100001111010010001
